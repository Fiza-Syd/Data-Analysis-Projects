1. Write a solution to find the number of times each student attended each exam.

SELECT s.student_id, s.student_name, su.subject_name, COUNT(e.student_id) AS attended_exams
FROM students s
CROSS JOIN subjects su
LEFT JOIN examinations e
ON s.student_id=e.student_id
AND su.subject_name = e.subject_name
GROUP BY s.student_id, s.student_name, su.subject_name
ORDER BY s.student_name, su.subject_name


2. Managers with at least 5 direct reports

SELECT a1.name 
FROM employees as a1
JOIN employee a2
ON a1.id=a2.manager_id
GROUP BY a2.manager_id
HAVING COUNT(*)>=5

3. Get the highest spending customer from each city

WITH Total_PAY_CUS AS 
    (SELECT customer, city,
           SUM(amount) AS total_amt 
    FROM uber_rides 
    GROUP BY customer, city),


Ranked_amt AS 
 (SELECT *,  ROW_NUMBER() OVER (PARTITION BY city ORDER BY                                                                                                                    total_amt DESC) AS rn
    FROM Total_PAY_CUS)
 
SELECT customer, rn, city 
FROM Ranked_amt 
WHERE rn = 1;

4. Identify customers who took same driver 3 or more times consecutively

WITH same_driver AS (
    SELECT *,
           LAG(driver, 1) OVER (PARTITION BY customer ORDER BY date) AS last_driver1,
           LAG(driver, 2) OVER (PARTITION BY customer ORDER BY date) AS last_driver2
    FROM uber_rides
)
SELECT DISTINCT customer
FROM same_driver
WHERE driver = last_driver1
  AND driver = last_driver2;

Find drivers earning below 10k, 10-20K, 20-30K, 30K+

WITH dsalary AS 
(SELECT driver, 
SUM (amount) as salary
FROM uber_rides
GROUP BY driver) 

SELECT driver, 
CASE
   WHEN salary <=10000 THEN ‘0 - 10k’
   WHEN salary > 10000 AND  salary <= 20000 THEN  '10 - 20k’
   WHEN salary > 20000 AND  salary <= 30000 THEN  '20 - 30k’
    ELSE '30k+'
    END AS salary_range

FROM dsalary 
